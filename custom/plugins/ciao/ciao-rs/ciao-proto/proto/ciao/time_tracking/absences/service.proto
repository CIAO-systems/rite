syntax = "proto3";
package ciao.time_tracking.absences;

import "ciao/time_tracking/absences/absence.proto";
import "ciao/common/time_range.proto";

// Service for Absence data
service AbsenceService {
  // Reads absences.
  //
  // Returns all absences that match the requested filter
  rpc Get(GetRequest) returns (GetResponse);

  // Streams a list of absences based on filters.
  rpc List(ListRequest) returns (stream ListResponse);

  // Creates a new Absence.
  //
  // If successfull, the newly created absence is returned
  rpc Create(CreateRequest) returns (CreateResponse);

  // Updates an existing absence.
  //
  // All absences that match the filter are updated
  rpc Update(UpdateRequest) returns (UpdateResponse);

  // Deletes an existing absence.
  //
  // Deletes *all* absences that match the filter
  // The data of all deleted absences is returned
  rpc Delete(DeleteRequest) returns (DeleteResponse);
}

// Request parameter for AbsenceService.create
message CreateRequest {
  // Data for the new absence
  Absence absence = 1;
}

message CreateResponse {
  Absence absence = 1;
}

// Request parameter for AbsenceService.get
message GetRequest {
  string id = 1;
}

message GetResponse {
  Absence absence = 1;
}

// Request parameter for AbsenceService.update
message UpdateRequest {
  // New data for the matching absences
  Absence absence = 1;
}

message UpdateResponse {
  Absence absence = 1;
}

// Request parameter for AbsenceService.delete
message DeleteRequest {
  string id = 1;
}

message DeleteResponse {
  // no response data
}

// Request parameter for AbsenceService.list
message ListRequest {
  optional ciao.common.TimeRange time_range = 1;
  repeated string user_ids = 2;
  repeated string time_type_ids = 3;
}

message ListResponse {
  repeated Absence absences = 1;
}
