syntax = "proto3";
package ciao.accounts;

import "ciao/accounts/account.proto";
import "ciao/accounts/account_version.proto";
import "ciao/devices/device.proto";

// Service for Users
service AccountService {
  // Reads accounts.
  //
  // Returns an account that matches the requested id
  rpc Get(GetRequest) returns (GetResponse);

  // List all accounts
  //
  // Lists all accounts
  rpc List(ListRequest) returns (stream ListResponse);

  // Creates a new Account.
  //
  // If successful, the newly created account is returned
  rpc Create(CreateRequest) returns (CreateResponse);

  // Updates an existing account.
  //
  // All account that match the requests filter are updated
  rpc Update(UpdateRequest) returns (UpdateResponse);

  // Deletes an existing account.
  //
  // Deletes *all* accounts that match the requests filter
  // The data of all deleted accounts is returned
  rpc Delete(DeleteRequest) returns (DeleteResponse);

  // Get the device action configuration for mobile application
  //
  rpc GetPersonalMobileActions(PersonalMobileActionsRequest) returns (PersonalMobileActionsResponse);

  // Reads a version by ID.
  //
  // Returns a version that matches the requested ID
  rpc GetVersion(GetVersionRequest) returns (GetVersionResponse);

  // Lists all versions.
  //
  // Streams all stored versions
  rpc ListVersions(ListVersionsRequest) returns (stream ListVersionsResponse);

  // Creates a new version.
  //
  // If successful, the newly created version is returned
  rpc CreateVersion(CreateVersionRequest) returns (CreateVersionResponse);

  // Updates an existing version.
  //
  // Updates the version that matches the given ID
  rpc UpdateVersion(UpdateVersionRequest) returns (UpdateVersionResponse);

  // Deletes an existing version.
  //
  // Deletes the version that matches the given ID
  rpc DeleteVersion(DeleteVersionRequest) returns (DeleteVersionResponse);
}

// Request parameter for AccountService.create
message CreateRequest {
  // Data for the new account
  Account account = 1;

  // The account's password
  string password = 2;
}

message CreateResponse {
  // Data for the newly created account
  Account account = 1;
}

// Request parameter for AccountService.get
message GetRequest {
  oneof identity {
    string id = 1;
    string email = 2;
  }
}

message GetResponse {
  // The account that matches the requested id
  Account account = 1;
}

message ListRequest {}

message ListResponse {
  repeated Account accounts = 1;
}

// Request parameter for AccountService.update
message UpdateRequest {
  // Data for the account
  Account account = 2;
}

// Result message for AccountService.update
message UpdateResponse {
  // New data for the updated account
  Account account = 1;
}

// Request parameter for AccountService.delete
message DeleteRequest {
  // Account id
  string id = 1;
}

// Result message for AccountService.delete
message DeleteResponse {
  // No data needed here
}

// Request message for all the actions to be shown on the mobile app for the
// current user
message PersonalMobileActionsRequest {
  // Currently, no data needed here
}

// A list of actions to show on the mobile app
message PersonalMobileActionsResponse {
  repeated ciao.devices.DeviceAction actions = 1;
}

// Request parameter for creating a Version
message CreateVersionRequest {
  // Data for the new version
  AccountVersion version = 1;
}

message CreateVersionResponse {
  // Data for the newly created version
  AccountVersion version = 1;
}

// Request parameter for fetching a Version by ID
message GetVersionRequest {
  // Version id
  string id = 1;
}

message GetVersionResponse {
  // The version that matches the requested ID
  AccountVersion version = 1;
}

// Request parameter for listing all Versions
message ListVersionsRequest {
  // List of user IDs to filter by
  repeated string user_ids = 1;
}

message ListVersionsResponse {
  // List of all versions
  repeated AccountVersion versions = 1;
}

// Request parameter for updating a Version
message UpdateVersionRequest {
  // Data for the version update
  AccountVersion version = 1;
}

// Response message for updating a Version
message UpdateVersionResponse {
  // New data for the updated version
  AccountVersion version = 1;
}

// Request parameter for deleting a Version
message DeleteVersionRequest {
  // Version id
  string id = 1;
}

// Response message for deleting a Version
message DeleteVersionResponse {
  // No data needed here
}
